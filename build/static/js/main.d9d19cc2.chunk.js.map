{"version":3,"sources":["views/Header.js","components/ItemService.js","components/AddItem.js","components/TableRow.js","components/IndexItem.js","components/EditItem.js","components/country.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["CustomHeader","props","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Header","Component","ItemService","data","axios","post","countryName","product","then","response","setState","items","catch","error","console","log","asetState","get","AddItem","handleCountryChange","event","countryValue","target","value","handleProductChange","productValue","handleSubmit","preventDefault","addItemService","sendData","state","history","push","onSubmit","this","type","onChange","disabled","selected","TableRow","deleteData","obj","_id","date","to","IndexItem","componentDidMount","tabRow","Array","map","object","i","key","EditItem","match","params","ComapnyValue","updateDate","Country","uniqBy","handleChange","results","Main","exact","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d9d19cc2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Navbar,\r\n    Nav,\r\n} from 'react-bootstrap';\r\n\r\nfunction CustomHeader(props) {\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"/\">CRUD Operation</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\">Lists</Nav.Link>\r\n          <Nav.Link href=\"/add-item\">Add Details</Nav.Link>\r\n          <Nav.Link href=\"/country\">Country</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nclass Header extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <CustomHeader />\r\n        </div>\r\n      );\r\n    }\r\n}\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nclass ItemService {\r\n\r\n    sendData(data) {\r\n        axios.post('/items/add/post', {\r\n            countryName: data.countryName,\r\n            product: data.product\r\n        })\r\n        .then((response) => {\r\n            this.setState({\r\n                items: response.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    updateDate(data, id) {\r\n        axios.post('/items/update/'+id, {\r\n            countryName: data.countryName,\r\n            product: data.product\r\n        })\r\n        .then((response) => {\r\n            this.asetState({\r\n                items: response.data\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    deleteData(id) {\r\n        axios.get('/items/delete/'+id)\r\n        .then(() => {\r\n            console.log('Deleted')\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport default ItemService;\r\n","import React, { Component } from 'react';\r\nimport ItemService from './ItemService';\r\n\r\n\r\nclass AddItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countryValue: '',\r\n            productValue: '',\r\n        }\r\n        this.addItemService = new ItemService();\r\n    }\r\n\r\n    handleCountryChange = (event) => {\r\n        this.setState({\r\n            countryValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleProductChange = (event) => {\r\n        this.setState({\r\n            productValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.addItemService.sendData({countryName: this.state.countryValue, product: this.state.productValue});\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        <h2>Add Country Details</h2>\r\n                        <br/>\r\n                        <label>Product Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.productValue}\r\n                            onChange={this.handleProductChange}\r\n                            className=\"form-control\"\r\n                        />\r\n                        <label>Select Country: </label>\r\n                        <select className=\"form-control\" onChange={this.handleCountryChange}>\r\n                            <option disabled selected>Select</option>\r\n                            <option value=\"India\">India</option>\r\n                            <option value=\"China\">China</option>\r\n                            <option value=\"USA\">USA</option>\r\n                            <option value=\"Brazil\">Brazil</option>\r\n                            <option value=\"Canada\">Canada</option>\r\n                            <option value=\"Itly\">Itly</option>\r\n                        </select>\r\n                        <br />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"submit\"\r\n                            className=\"btn btn-primary\"\r\n                        />\r\n                    </label>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItem;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ItemService from './ItemService';\r\n\r\nclass TableRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addItemService = new ItemService();\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.addItemService.deleteData(this.props.obj._id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    {this.props.obj._id}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.countryName}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.product}\r\n                </td>\r\n                <td>\r\n                    {this.props.obj.date}\r\n                </td>\r\n                <td>\r\n                    <Link to={\"edit/\"+this.props.obj._id} className=\"btn btn-primary\">Edit</Link>\r\n                </td>\r\n                <td>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <input type=\"submit\" value=\"Delete\" className=\"btn btn-danger\"\r\n                         />\r\n                    </form>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRow;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport TableRow from './TableRow';\r\n\r\nclass IndexItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            items: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get('/items')\r\n        .then((response) => {\r\n            this.setState({\r\n                items: response.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    tabRow = () => {\r\n        if(this.state.items instanceof Array) {\r\n            return this.state.items.map((object, i) => {\r\n                return <TableRow obj={object} key={i} />\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1 className='text-center'>MERN CRUD APPLICATION</h1>\r\n                <br />\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Order</td>\r\n                            <td>Country Name</td>\r\n                            <td>Product</td>\r\n                            <td>Date</td>\r\n                            <td>Update</td>\r\n                            <td>Delete</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.tabRow()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexItem;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ItemService from './ItemService';\r\n\r\n\r\nclass EditItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.addItemService = new ItemService();\r\n        this.state = {\r\n            ComapnyValue: '',\r\n            productValue: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get('/items/edit/'+this.props.match.params.id)\r\n        .then((response) => {\r\n            this.setState({\r\n                ComapnyValue: response.data.countryName,\r\n                productValue: response.data.product\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    handleCountryChange = (event) => {\r\n        this.setState({\r\n            ComapnyValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleProductChange = (event) => {\r\n        this.setState({\r\n            productValue: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.addItemService.updateDate({countryName: this.state.ComapnyValue, product: this.state.productValue}, this.props.match.params.id);\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Edit Item:\r\n                        <br/>\r\n                        <label>Product Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.productValue}\r\n                            onChange={this.handleProductChange}\r\n                            className=\"form-control\"\r\n                        />\r\n                        <label>Country Name: </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={this.state.ComapnyValue}\r\n                            onChange={this.handleCountryChange}\r\n                            className=\"form-control\"\r\n                        />\r\n                        <br />\r\n                    </label>\r\n                    <br />\r\n                    <input\r\n                        type=\"submit\"\r\n                        value=\"Update\"\r\n                        className=\"btn btn-primary\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditItem;\r\n","import React, { Component } from 'react';\r\nimport ItemService from './ItemService';\r\nimport axios from 'axios';\r\nimport TableRow from './TableRow';\r\nimport { uniqBy } from 'lodash';\r\nclass Country extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '',\r\n            items: '',\r\n            results: '',\r\n        }\r\n        this.addItemService = new ItemService();\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        axios.get('/items')\r\n        .then((response) => {\r\n            const data = uniqBy(response.data, 'countryName');\r\n            this.setState({\r\n                items: data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        axios.get(`/items/getDetails/${this.state.value}`)\r\n        .then((response) => {\r\n            console.log(response.data);\r\n            this.setState({\r\n                results: response.data\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        <h2>Select Country</h2>\r\n                        <select className=\"form-control\" onChange={this.handleChange}>\r\n                        <option disabled selected>Select</option>\r\n                        {this.state.items && this.state.items.map((object, i) =>\r\n                            <option value={object.countryName}>{object.countryName}</option>\r\n                        )}\r\n                        </select>\r\n                        <br />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"submit\"\r\n                            className=\"btn btn-primary\"\r\n                        />\r\n                    </label>\r\n                </form>\r\n                <br />\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr>\r\n                            <td>ID</td>\r\n                            <td>Country Name</td>\r\n                            <td>Product</td>\r\n                            <td>Date</td>\r\n                            <td>Update</td>\r\n                            <td>Delete</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.results && this.state.results.map((object, i) => \r\n                        <TableRow obj={object} key={i} />\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Country;\r\n","import React, { Component } from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport AddItem from './components/AddItem';\r\nimport IndexItem from './components/IndexItem';\r\nimport EditItem from './components/EditItem';\r\nimport Country from './components/country';\r\nimport './index.css';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n        return (\r\n            <main>\r\n                <BrowserRouter>\r\n                <Switch>\r\n                    <Route exact path='/' component={IndexItem} />\r\n                    <Route path='/add-item' component={AddItem} />\r\n                    <Route path='/index' component={IndexItem} />\r\n                    <Route path='/edit/:id' component={EditItem} />\r\n                    <Route path='/country' component={Country} />\r\n                </Switch>\r\n                </BrowserRouter>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\nimport Header from './views/Header';\nimport Main from './Main';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <div>\n              <Header />\n              <Main />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}